name: Update snapshots

on:
  # Run any time when a new label added to the PR
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  workflow_dispatch:
    inputs:
    branch:
      description: "Branch to test update snapshots"
      required: false
      default: "main"

  # cancel workflow when a newer version of the workflow is triggered on the same github ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  VV_COMMUNICATION_SERVICES_CONNECTION_STRING: ${{ secrets.COMMUNICATION_SERVICES_CONNECTION_STRING_E2E }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  update-snapshots:
    # This job will only run if the comment was on a pull requests and matches the label
    if: ${{ github.event.label.name == 'ui change' || contains( github.event.pull_request.labels.*.name, 'ui change') || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      # Check out repo
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # Use a service account when checking out. This is to workaround the issue were GitHub
          # actions, when using the default account, cannot trigger other actions. And we want this
          # action to trigger the regular CI pipeline on the created branch.
          # This service account is only for this PAT, pwd was created and thrown away
          # If any update needed, create a new account, add access to the repo and generate a new PAT
          token: ${{ secrets.SERVICE_ACCOUNT_PAT }}

      # Setup bot information for creating pull request
      # Here we use the id from the github actions bot: https://api.github.com/users/better-informatics%5Bbot%5D
      - name: Setup bot git information
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

      - name: If run on a PR, merge base branch to get existing snapshot updates
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          git checkout ${{ github.event.pull_request.head.ref }}
          git merge ${{ env.GITHUB_BASE_REF }}

      # Ensure node version is great enough
      - name: Use Node.js v14.19.x
        uses: actions/setup-node@v3
        with:
          node-version: "14.19.x"

      # Install dependencies
      - name: Install client dependencies
        working-directory: ./client
        run: npm install

      - name: Install server dependencies
        working-directory: ./server
        run: npm install

      - name: Install e2e test dependencies
        working-directory: ./e2e-tests
        run: |
          npm install
          npx playwright install

      # Build and run e2e
      - name: Build e2e
        working-directory: ./e2e-tests
        run: |
          npm run build

      - name: Update snapshot
        id: updatesnapshots
        working-directory: ./e2e-tests
        run: npx playwright test --update-snapshots
        env:
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}

      - name: Check for snapshot changes
        id: changescheck
        run: |
          if [[ -z $(git status e2e-tests/tests/snapshots -s) ]]
          then
            echo "::set-output name=hasChanged::false"
          else
            echo "::set-output name=hasChanged::true"
            exit
          fi

      - name: Commit new snapshots
        if: ${{ steps.changescheck.outputs.hasChanged == 'true' }}
        run: |
          git add e2e-tests/tests/*.png
          git commit -m 'Update snapshots'
          git push
